class Node:
    def __init__(self,d):
        self.d=d
        self.left=None
        self.right=None
        self.hd=0


def level_order(root,order='TB'):
    m={}
    queue=[(root,0)]
    while queue:
        node, lvl=queue.pop(0)
        if lvl not in m:
            m[lvl]=[]
        m[lvl].append(node.d)
        if node.left:
            queue.append((node.left, lvl+1))
        if node.right:
            queue.append((node.right, lvl+1))
    if order=='TB':
        for k in m.keys():
            print(m[k],end=' ')
    elif order=='BT':
        for k in sorted(m,reverse=True):
            print(m[k],end=' ')

def vertical_order(root):
    v={}
    queue=[(root,0)]
    while queue:
        node, hd=queue.pop(0)
        if hd not in v:
            v[hd]=[]
        v[hd].append(node.d)
        if node.left:
            queue.append((node.left, hd-1))
        if node.right:
            queue.append((node.right, hd+1))
    for k in sorted(v):
        print(v[k],end=' ')



root=Node('a')
root.left=Node('b')
root.right=Node('c')
root.left.left=Node('d')
root.left.right=Node('e')
root.right.left=Node('f')
root.right.right=Node('g')

level_order(root)
print("\n")
level_order(root,'BT')
print("\n")
vertical_order(root)
